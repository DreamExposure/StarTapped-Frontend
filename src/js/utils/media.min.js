let encodedFiles=new Map;function encodeImageFileAsBase64(e){let l=e.files;if(l.length>0){let t=l[0];if(validateFileSize(e)){let l=new FileReader;l.onload=function(l){let t=l.target.result,i={type:t.split(",")[0].split(":")[1].split(";")[0],name:e.value.split(/([\\\/])/g).pop(),encoded:t.split(",")[1]};removeEncodedResults(e.id),encodedFiles.set(e.id,i)},l.readAsDataURL(t)}}}function encodeFileAsBase64WithId(e,l){let t=e.files;if(t.length>0){let i=t[0];if(validateFileSize(e)){let t=new FileReader;t.onload=function(t){let i=t.target.result,s={type:i.split(",")[0].split(":")[1].split(";")[0],name:e.value.split(/([\\\/])/g).pop(),encoded:i.split(",")[1]};removeEncodedResults(l),encodedFiles.set(l,s)},t.readAsDataURL(i)}}}function getEncodedResults(e){return encodedFiles.has(e)?encodedFiles.get(e):null}function removeEncodedResults(e){encodedFiles.has(e)&&encodedFiles.delete(e)}function hasEncodedResults(e){return encodedFiles.has(e)}function validateFileSize(e){return!(e.files[0].size/1024/1024>10)||(showSnackbar("File is too big! (Max 10 MB)"),$(e).val(""),!1)}